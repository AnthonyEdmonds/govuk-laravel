<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="ListBlockRenderer.php" path="\CommonMark">
    <totals>
      <lines total="39" comments="3" code="36" executable="11" executed="10" percent="90.91"/>
      <methods count="1" tested="0" percent="0.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="0" percent="0.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="AnthonyEdmonds\GovukLaravel\CommonMark\ListBlockRenderer" start="11" executable="11" executed="10" crap="5.02">
      <namespace name="AnthonyEdmonds\GovukLaravel\CommonMark"/>
      <method name="render" signature="render(League\CommonMark\Node\Node $node, League\CommonMark\Renderer\ChildNodeRendererInterface $childRenderer): League\CommonMark\Util\HtmlElement" start="16" end="37" crap="5.02" executable="11" executed="10" coverage="90.909090909091"/>
    </class>
    <coverage>
      <line nr="18">
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\CommonMark\ListBlockRendererTest::testHasUl"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\CommonMark\ListBlockRendererTest::testHasOl"/>
      </line>
      <line nr="20">
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\CommonMark\ListBlockRendererTest::testHasUl"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\CommonMark\ListBlockRendererTest::testHasOl"/>
      </line>
      <line nr="22">
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\CommonMark\ListBlockRendererTest::testHasUl"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\CommonMark\ListBlockRendererTest::testHasOl"/>
      </line>
      <line nr="24">
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\CommonMark\ListBlockRendererTest::testHasUl"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\CommonMark\ListBlockRendererTest::testHasOl"/>
      </line>
      <line nr="26">
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\CommonMark\ListBlockRendererTest::testHasUl"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\CommonMark\ListBlockRendererTest::testHasOl"/>
      </line>
      <line nr="27">
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\CommonMark\ListBlockRendererTest::testHasUl"/>
      </line>
      <line nr="28">
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\CommonMark\ListBlockRendererTest::testHasOl"/>
      </line>
      <line nr="30">
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\CommonMark\ListBlockRendererTest::testHasUl"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\CommonMark\ListBlockRendererTest::testHasOl"/>
      </line>
      <line nr="34">
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\CommonMark\ListBlockRendererTest::testHasUl"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\CommonMark\ListBlockRendererTest::testHasOl"/>
      </line>
      <line nr="36">
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\CommonMark\ListBlockRendererTest::testHasUl"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\CommonMark\ListBlockRendererTest::testHasOl"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">AnthonyEdmonds\GovukLaravel\CommonMark</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">League\CommonMark\Extension\CommonMark\Node\Block\ListBlock</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">League\CommonMark\Node\Node</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="7">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">League\CommonMark\Renderer\ChildNodeRendererInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">League\CommonMark\Renderer\NodeRendererInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">League\CommonMark\Util\HtmlElement</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="10"/>
      <line no="11">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ListBlockRenderer</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IMPLEMENTS">implements</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">NodeRendererInterface</token>
      </line>
      <line no="12">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="13">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="14">
        <token name="T_DOC_COMMENT">     * @param  ListBlock  $node</token>
      </line>
      <line no="15">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="16">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">render</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Node</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$node</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ChildNodeRendererInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$childRenderer</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">HtmlElement</token>
      </line>
      <line no="17">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="18">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">ListBlock</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">assertInstanceOf</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$node</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="19"/>
      <line no="20">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$listData</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$node</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getListData</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="21"/>
      <line no="22">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$tag</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$listData</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">type</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ListBlock</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">TYPE_BULLET</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ul'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ol'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="23"/>
      <line no="24">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$attrs</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$node</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">data</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'attributes'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="25"/>
      <line no="26">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$attrs</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'class'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$tag</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ul'</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">            </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'govuk-list govuk-list--bullet'</token>
      </line>
      <line no="28">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'govuk-list govuk-list--number'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="29"/>
      <line no="30">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$listData</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">start</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$listData</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">start</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="31">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$attrs</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'start'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING_CAST">(string)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$listData</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">start</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="32">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="33"/>
      <line no="34">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$innerSeparator</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$childRenderer</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getInnerSeparator</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="35"/>
      <line no="36">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">HtmlElement</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$tag</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$attrs</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$innerSeparator</token>
        <token name="T_DOT">.</token>
        <token name="T_VARIABLE">$childRenderer</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">renderNodes</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$node</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">children</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_DOT">.</token>
        <token name="T_VARIABLE">$innerSeparator</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="37">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="38">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="39"/>
    </source>
  </file>
</phpunit>
