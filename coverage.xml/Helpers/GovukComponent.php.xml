<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="GovukComponent.php" path="\Helpers">
    <totals>
      <lines total="63" comments="2" code="61" executable="23" executed="22" percent="95.65"/>
      <methods count="3" tested="2" percent="66.67"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="0" percent="0.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="AnthonyEdmonds\GovukLaravel\Helpers\GovukComponent" start="5" executable="23" executed="22" crap="11">
      <namespace name="AnthonyEdmonds\GovukLaravel\Helpers"/>
      <method name="makeTableColumnJson" signature="makeTableColumnJson(bool $heading, ?string $hide, string $label, bool $numeric, string $slotHtml): string" start="7" end="21" crap="2" executable="7" executed="7" coverage="100"/>
      <method name="renderTableContent" signature="renderTableContent(array $column, $row): string" start="24" end="49" crap="7.03" executable="12" executed="11" coverage="91.666666666667"/>
      <method name="toAttributes" signature="toAttributes(array $array): string" start="52" end="61" crap="2" executable="4" executed="4" coverage="100"/>
    </class>
    <coverage>
      <line nr="14">
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableColumnTest::testMakesColumnJson"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testProcessesTableColumns"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsArray"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsResourceCollection"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsJsonResource"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsAbstractPaginator"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsCollection"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsOther"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testHasCaption"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testShowsPagination"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testHidesPaginationWhenNull"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testHasId"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\MakeTableColumnJsonTest::testCreatesJson"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\MakeTableColumnJsonTest::testTogglesHide"/>
      </line>
      <line nr="15">
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableColumnTest::testMakesColumnJson"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testProcessesTableColumns"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsArray"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsResourceCollection"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsJsonResource"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsAbstractPaginator"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsCollection"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsOther"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testHasCaption"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testShowsPagination"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testHidesPaginationWhenNull"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testHasId"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\MakeTableColumnJsonTest::testCreatesJson"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\MakeTableColumnJsonTest::testTogglesHide"/>
      </line>
      <line nr="16">
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableColumnTest::testMakesColumnJson"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testProcessesTableColumns"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsArray"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsResourceCollection"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsJsonResource"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsAbstractPaginator"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsCollection"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsOther"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testHasCaption"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testShowsPagination"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testHidesPaginationWhenNull"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testHasId"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\MakeTableColumnJsonTest::testCreatesJson"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\MakeTableColumnJsonTest::testTogglesHide"/>
      </line>
      <line nr="17">
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableColumnTest::testMakesColumnJson"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testProcessesTableColumns"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsArray"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsResourceCollection"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsJsonResource"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsAbstractPaginator"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsCollection"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsOther"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testHasCaption"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testShowsPagination"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testHidesPaginationWhenNull"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testHasId"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\MakeTableColumnJsonTest::testCreatesJson"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\MakeTableColumnJsonTest::testTogglesHide"/>
      </line>
      <line nr="18">
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableColumnTest::testMakesColumnJson"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testProcessesTableColumns"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsArray"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsResourceCollection"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsJsonResource"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsAbstractPaginator"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsCollection"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsOther"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testHasCaption"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testShowsPagination"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testHidesPaginationWhenNull"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testHasId"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\MakeTableColumnJsonTest::testCreatesJson"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\MakeTableColumnJsonTest::testTogglesHide"/>
      </line>
      <line nr="26">
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsArray"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsResourceCollection"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsJsonResource"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsAbstractPaginator"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsCollection"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsOther"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\Table\BodyTest::testCreatesRows"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\Table\BodyTest::testCreatesColumns"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\RenderTableContentTest::testReplacesPlaceholders"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\RenderTableContentTest::testHidesColumns"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\RenderTableContentTest::testDoesntHideWhenMissing"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\RenderTableContentTest::testSkipsNonScalarValues"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\RenderTableContentTest::testReplacesNullPlaceholders"/>
      </line>
      <line nr="30">
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsArray"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsResourceCollection"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsJsonResource"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsAbstractPaginator"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsCollection"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsOther"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\Table\BodyTest::testCreatesRows"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\Table\BodyTest::testCreatesColumns"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\RenderTableContentTest::testReplacesPlaceholders"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\RenderTableContentTest::testHidesColumns"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\RenderTableContentTest::testDoesntHideWhenMissing"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\RenderTableContentTest::testSkipsNonScalarValues"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\RenderTableContentTest::testReplacesNullPlaceholders"/>
      </line>
      <line nr="32">
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsArray"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsResourceCollection"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsJsonResource"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsAbstractPaginator"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsCollection"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsOther"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\Table\BodyTest::testCreatesRows"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\Table\BodyTest::testCreatesColumns"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\RenderTableContentTest::testReplacesPlaceholders"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\RenderTableContentTest::testHidesColumns"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\RenderTableContentTest::testDoesntHideWhenMissing"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\RenderTableContentTest::testSkipsNonScalarValues"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\RenderTableContentTest::testReplacesNullPlaceholders"/>
      </line>
      <line nr="33">
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsArray"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsResourceCollection"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsJsonResource"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsAbstractPaginator"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsCollection"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsOther"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\Table\BodyTest::testCreatesRows"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\Table\BodyTest::testCreatesColumns"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\RenderTableContentTest::testReplacesPlaceholders"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\RenderTableContentTest::testHidesColumns"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\RenderTableContentTest::testDoesntHideWhenMissing"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\RenderTableContentTest::testSkipsNonScalarValues"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\RenderTableContentTest::testReplacesNullPlaceholders"/>
      </line>
      <line nr="34">
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\RenderTableContentTest::testHidesColumns"/>
      </line>
      <line nr="37">
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsArray"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsResourceCollection"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsJsonResource"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsAbstractPaginator"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsCollection"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsOther"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\Table\BodyTest::testCreatesRows"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\Table\BodyTest::testCreatesColumns"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\RenderTableContentTest::testReplacesPlaceholders"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\RenderTableContentTest::testHidesColumns"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\RenderTableContentTest::testDoesntHideWhenMissing"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\RenderTableContentTest::testSkipsNonScalarValues"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\RenderTableContentTest::testReplacesNullPlaceholders"/>
      </line>
      <line nr="38">
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\RenderTableContentTest::testReplacesNullPlaceholders"/>
      </line>
      <line nr="41">
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsArray"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsResourceCollection"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsJsonResource"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsAbstractPaginator"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsCollection"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsOther"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\Table\BodyTest::testCreatesRows"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\Table\BodyTest::testCreatesColumns"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\RenderTableContentTest::testReplacesPlaceholders"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\RenderTableContentTest::testHidesColumns"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\RenderTableContentTest::testDoesntHideWhenMissing"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\RenderTableContentTest::testSkipsNonScalarValues"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\RenderTableContentTest::testReplacesNullPlaceholders"/>
      </line>
      <line nr="42">
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\RenderTableContentTest::testSkipsNonScalarValues"/>
      </line>
      <line nr="45">
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsArray"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsResourceCollection"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsJsonResource"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsAbstractPaginator"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsCollection"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsOther"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\Table\BodyTest::testCreatesRows"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\Table\BodyTest::testCreatesColumns"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\RenderTableContentTest::testReplacesPlaceholders"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\RenderTableContentTest::testHidesColumns"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\RenderTableContentTest::testDoesntHideWhenMissing"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\RenderTableContentTest::testSkipsNonScalarValues"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\RenderTableContentTest::testReplacesNullPlaceholders"/>
      </line>
      <line nr="48">
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsArray"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsResourceCollection"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsJsonResource"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsAbstractPaginator"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsCollection"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsOther"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\Table\BodyTest::testCreatesRows"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\Table\BodyTest::testCreatesColumns"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\RenderTableContentTest::testReplacesPlaceholders"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\RenderTableContentTest::testDoesntHideWhenMissing"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\RenderTableContentTest::testSkipsNonScalarValues"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\RenderTableContentTest::testReplacesNullPlaceholders"/>
      </line>
      <line nr="54">
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\ToAttributesTest::testFormatsArrayAsAttributes"/>
      </line>
      <line nr="56">
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\ToAttributesTest::testFormatsArrayAsAttributes"/>
      </line>
      <line nr="57">
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\ToAttributesTest::testFormatsArrayAsAttributes"/>
      </line>
      <line nr="60">
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\ToAttributesTest::testFormatsArrayAsAttributes"/>
      </line>
      <line nr="19">
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableColumnTest::testMakesColumnJson"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testProcessesTableColumns"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsArray"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsResourceCollection"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsJsonResource"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsAbstractPaginator"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsCollection"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsOther"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testHasCaption"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testShowsPagination"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testHidesPaginationWhenNull"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testHasId"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\MakeTableColumnJsonTest::testCreatesJson"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\MakeTableColumnJsonTest::testTogglesHide"/>
      </line>
      <line nr="20">
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableColumnTest::testMakesColumnJson"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testProcessesTableColumns"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsArray"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsResourceCollection"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsJsonResource"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsAbstractPaginator"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsCollection"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testDataAcceptsOther"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testHasCaption"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testShowsPagination"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testHidesPaginationWhenNull"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Components\TableTest::testHasId"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\MakeTableColumnJsonTest::testCreatesJson"/>
        <covered by="AnthonyEdmonds\GovukLaravel\Tests\Unit\Helpers\GovukComponent\MakeTableColumnJsonTest::testTogglesHide"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">AnthonyEdmonds\GovukLaravel\Helpers</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">GovukComponent</token>
      </line>
      <line no="6">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="7">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STATIC">static</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">makeTableColumnJson</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="8">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$heading</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="9">
        <token name="T_WHITESPACE">        </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$hide</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="10">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$label</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="11">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$numeric</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="12">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$slotHtml</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="13">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="14">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">json_encode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="15">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'heading'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$heading</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="16">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'hide'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">strlen</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$hide</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_GT">&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$hide</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="17">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'html'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$slotHtml</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="18">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'label'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$label</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="19">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'numeric'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$numeric</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="20">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="21">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="22"/>
      <line no="23">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/* Replace any row placeholders based on the table column markup */</token>
      </line>
      <line no="24">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STATIC">static</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">renderTableContent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$column</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$row</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
      </line>
      <line no="25">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">is_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$row</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$row</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY_CAST">(array)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$row</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="28">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="29"/>
      <line no="30">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$content</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$column</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'html'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="31"/>
      <line no="32">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$row</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="33">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">~</token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$column</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'hide'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_EQUAL">==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="34">
        <token name="T_WHITESPACE">                </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="35">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="36"/>
      <line no="37">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="38">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="39">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="40"/>
      <line no="41">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">is_scalar</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="42">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONTINUE">continue</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="43">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="44"/>
      <line no="45">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$content</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">str_replace</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">~</token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$content</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="46">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="47"/>
      <line no="48">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$content</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="49">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="50"/>
      <line no="51">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/* Convert a keyed array to an HTML attributes string */</token>
      </line>
      <line no="52">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STATIC">static</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">toAttributes</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
      </line>
      <line no="53">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="54">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$attributes</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="55"/>
      <line no="56">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="57">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$attributes</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">=\"</token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">\"</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="58">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="59"/>
      <line no="60">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">implode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">' '</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$attributes</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="61">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="62">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="63"/>
    </source>
  </file>
</phpunit>
